{% schema %}
  {
    "name": "custom related",
    "settings": [
      {
        "id": "product_related_heading",
        "type": "text",
        "label": "Product Related Heading",
        "default": "You may also like"
      }
    ],
    "templates": ["product"]
  }
{% endschema %}

{% stylesheet %}

.section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .slider-wrapper {
		height: 100%;
    margin: 1rem;
    position: relative;
    overflow: hidden;
    }

    .slides-container {
    width: 100%;
		height: 100%;
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    overflow: scroll;
    scroll-behavior: smooth;
		gap: 4rem;
    }
    .slides-container {
      scrollbar-width: none; /* Firefox */
      -ms-overflow-style: none; /* Internet Explorer 10+ */
    }

    .slides-container::-webkit-scrollbar {
      width: 0;
      height: 0;
    }

    .slide-arrow {
      position: absolute;
      display: flex;
      top: 0;
      bottom: 0;
      margin: auto;
      height: 4rem;
      background-color: white;
      border: none;
      width: 2rem;
      font-size: 3rem;
      padding: 0;
      cursor: pointer;
      opacity: 0.5;
      transition: opacity 100ms;
      }
      .slide-arrow:hover,
      .slide-arrow:focus {
        opacity: 1;
      }

      #slide-arrow-prev {
        left: 0;
        padding-left: 0.25rem;
        border-radius: 0 2rem 2rem 0;
      }

      #slide-arrow-next {
        right: 0;
        padding-left: 0.75rem;
        border-radius: 2rem 0 0 2rem;
      }
      .product-item {
      flex: 0 0 25%;
      display: flex;
      justify-content: space-between;
      gap: 2rem;
      }
      .product-item a{
        text-decoration: none;
        color: inherit;
      }
      .product-item img{
        height: auto;
        width: 100%;
      }
      .product-card-details{
        width: 100%;
        display: flex;
        justify-content:space-between;
        align-items: center;
      }
      .product-card-heading{
        margin: 0;
      }

{% endstylesheet %}


<div class="related-products page-width section-{{ section.id }}-padding" id="related-products">
  <h1>{{ section.settings.product_related_heading | escape }}</h1>
  <div class="container">
		<section class="slider-wrapper">
		  <button class="slide-arrow" id="slide-arrow-prev">&#8249;</button>
		  <button class="slide-arrow" id="slide-arrow-next">&#8250;</button>
		  <ul class="slides-container" id="slides-container">

      </ul>
      </section>
      </div>
      </div>
</div>






<script>
const productRecommendationsSection = document.getElementById("slides-container");
fetch(window.Shopify.routes.root + "recommendations/products.json?product_id={{ product.id }}&intent=related")
 .then(response => response.json())
 .then((res) => {
  console.log(res)
  if (res.products) {
    res.products.forEach((el) => {
      createCard(el);
    }) 
    const slide = document.querySelector(".product-item");
    const prevButton = document.getElementById("slide-arrow-prev");
    const nextButton = document.getElementById("slide-arrow-next");
    nextButton.addEventListener("click", (event) => {
      const slideWidth = slide.clientWidth;
      productRecommendationsSection.scrollLeft += slideWidth *3;
    });
    prevButton.addEventListener("click", () => {
      const slideWidth = slide.clientWidth;
      productRecommendationsSection.scrollLeft -= slideWidth *3;
    });
  } else {
    document.getElementById("related-products").style.display = "none";
  }
 });


 function createCard(el) {
  if (el.images < 0) return
  const Card = document.createElement("li")
  Card.className = "product-item"
  const TempElement = `
  <a class="card-link" href="${el.url}">
    <img src="${el.images[0]}" alt="">
    <div class="product-card-details">
      <div class="left">
        <span>${el.type ? el.type : "N/A"}</span>
        <h3 class="product-card-heading">${el.title}</h3>
      </div>
        <span class="product-card-price">$${el.price / 100}</span>
    </div>
  </a>
  `
  Card.innerHTML = TempElement
  productRecommendationsSection.append(Card)
 }
</script>




